{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/colleges/colleges.component.ts","webpack:///src/app/colleges/colleges.component.html","webpack:///src/app/contact/contact.component.ts","webpack:///src/app/contact/contact.component.html","webpack:///src/app/covidservice.service.ts","webpack:///src/app/customer-page/customer-page.component.ts","webpack:///src/app/customer-page/customer-page.component.html","webpack:///src/app/homepage/homepage.component.ts","webpack:///src/app/homepage/homepage.component.html","webpack:///src/app/hospitals/hospitals.component.ts","webpack:///src/app/hospitals/hospitals.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/notifications/notifications.component.ts","webpack:///src/app/notifications/notifications.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/searchfilter.pipe.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","appRoot","path","component","AppModule","withComponents","declarations","providers","bootstrap","CollegesComponent","service","getColleges","subscribe","result","Colleges","data","medicalColleges","ContactComponent","getContacts","console","log","contactsList","contacts","regional","CovidserviceService","httpClient","get","customer","post","loginId","password","providedIn","CustomerPageComponent","router","navigate","routeToContacts","routeToHospitals","routeToNotifications","routeToColleges","HomepageComponent","config","interval","wrap","keyboard","pauseOnHover","ngbSlideEvent","source","paused","INDICATOR","ARROW_LEFT","ARROW_RIGHT","images","imagePath","item","ngCarousel","select","prev","next","pause","cycle","callRegister","callLogin","HospitalsComponent","getHospitals","hospitals","LoginComponent","loginForm","customerLogin","alert","loginSubmit","NotificationsComponent","getNotifications","notifications","RegisterComponent","custName","mblNo","email","gender","age","getAllLoginIds","loginIds","registerForm","regCustomer","register","SearchfilterPipe","searchValue","filter","college","state","toLocaleLowerCase","includes","name","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n  title = 'covid';\n  \n}\n","<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\nimport { RouterModule, Routes} from '@angular/router';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { NotificationsComponent } from './notifications/notifications.component';\nimport { HospitalsComponent } from './hospitals/hospitals.component';\nimport { CollegesComponent } from './colleges/colleges.component';\nimport { CustomerPageComponent } from './customer-page/customer-page.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component'; \nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AgGridModule } from 'ag-grid-angular';\nimport { SearchfilterPipe } from './searchfilter.pipe';\n\n\n\nconst appRoot: Routes = [{path:'', component:HomepageComponent},\n                         {path: 'customer-page', component: CustomerPageComponent}, \n                         {path: 'contact', component: ContactComponent}, \n                         {path: 'notifications', component:NotificationsComponent}, \n                         {path: 'hospitals',component: HospitalsComponent}, \n                         {path: 'colleges',component: CollegesComponent}, \n                         {path: 'login', component:LoginComponent},\n                         {path: 'register', component:RegisterComponent}\n                         \n\n]\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomepageComponent,\n    ContactComponent,\n    NotificationsComponent,\n    HospitalsComponent,\n    CollegesComponent,\n    CustomerPageComponent,\n    LoginComponent,\n    RegisterComponent,\n    SearchfilterPipe,\n    \n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule,\n    RouterModule.forRoot(appRoot),\n    NgbModule,\n    AgGridModule.withComponents([])     \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { CovidserviceService } from '../covidservice.service';\nimport {College} from '../college';\n\n@Component({\n  selector: 'app-colleges',\n  templateUrl: './colleges.component.html',\n  styleUrls: ['./colleges.component.css']\n})\nexport class CollegesComponent implements OnInit {\n  colleges: any;\n  searchValue:string;\n  searchText:string;\n  Colleges: College[];\n\n  constructor(private service: CovidserviceService) { }\n\n  ngOnInit(): void {\n    this.service.getColleges().subscribe((result: any)=>{this.Colleges = result.data.medicalColleges});\n  }\n\n}\n","\n<style>\n    body {\n        background-color:rgb(220, 236, 238) ;     \n    }\n</style>\n<html>\n<body>\n    <div class=\"form-grop-row\">\n        <label class=\"col-sm-2-col-form-label\" style=\"text-align:right;\">Search for a State or Type</label>\n        <input type=\"text\" [(ngModel)]=\"searchValue\" class=\"form-control\" id=\"search\"/>           \n    </div>\n    \n    \n    <div class=\"container\">\n        <table class=\"table table-hover\" align=center>\n\n            <thead>\n                <th scope>State</th>\n                <th scope>Name</th>\n                <th scope>City</th>\n                <th scope>Type</th>\n                <th scope>Admission Capacity</th>\n                <th scope>Hospital Beds</th>\n                \n            </thead>\n            <tbody>\n                <tr *ngFor=\"let college of Colleges | searchfilter:searchValue\">\n                    <td>{{college.state}}</td>\n                    <td>{{college.name}}</td>\n                    <td>{{college.city}}</td>\n                    <td>{{college.ownership}}</td>\n                    <td>{{college.admissionCapacity}}</td>\n                    <td>{{college.hospitalBeds}}</td>\n                </tr>\n            </tbody>\n        </table>\n\n\n    </div>\n\n</body>\n\n</html>\n\n","import { Component, OnInit } from '@angular/core';\nimport { CovidserviceService } from '../covidservice.service';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n  contactsList:any;\n  constructor(private service: CovidserviceService) { }\n\n  ngOnInit(): void {\n    this.service.getContacts().subscribe((data: any) => {console.log(data); this.contactsList = data.data.contacts.regional; console.log(this.contactsList)});\n  }\n\n}\n","\n<style>\n    body {\n        background-color:rgb(220, 236, 238) ;\n        \n    }\n</style>\n\n<html>\n\n<body>\n\n    <div class=\"container\">\n        <table class=\"table table-hover\" align=center>\n\n            <thead>\n                <th scope filter:true>State Name</th>\n                <th scope>Helpline Number</th>\n            </thead>\n            <tbody>\n                <tr *ngFor='let contact of contactsList'>\n                    \n                        <td>{{contact.loc}}</td>\n                        <td>{{contact.number}}</td>\n                    \n                </tr>\n            </tbody>\n        </table>\n\n\n    </div>\n\n</body>\n\n</html>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CovidserviceService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getContacts(): any{\n    return this.httpClient.get('https://api.rootnet.in/covid19-in/contacts');\n  }\n\n  getNotifications():any {\n    return this.httpClient.get('https://api.rootnet.in/covid19-in/notifications');\n  }\n\n  getHospitals(): any {\n    return this.httpClient.get('https://api.rootnet.in/covid19-in/hospitals/beds');\n  }\n\n  getColleges(): any {\n    return this.httpClient.get('https://api.rootnet.in/covid19-in/hospitals/medical-colleges');\n  }\n\n  getAllLoginIds(){\n    return this.httpClient.get('COVID/webapi/myresource/getAllLoginIds');\n  }\n\n  regCustomer(customer: any) {\n    console.log(customer)\n    return this.httpClient.post('COVID/webapi/myresource/regCustomer/', customer);\n  }\n\n  customerLogin(loginId: any, password: any) {\n    console.log(loginId, password)\n    return this.httpClient.get('COVID/webapi/myresource/customerLogin/' + loginId + \"/\" + password);\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-customer-page',\n  templateUrl: './customer-page.component.html',\n  styleUrls: ['./customer-page.component.css']\n})\nexport class CustomerPageComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n  routeToContacts() {\n    this.router.navigate(['contact']);\n  }\n  routeToColleges() {\n    this.router.navigate(['colleges']);\n  }\n  routeToHospitals() {\n    this.router.navigate(['hospitals']);\n  }\n  routeToNotifications() {\n    this.router.navigate(['notifications']);\n  }\n\n}\n","\n<div class=\"topnav\">\n  <!--<a class=\"active\" href=\"#home\">Home</a>-->\n  <a class=\"active\" (click)=\"routeToContacts()\">Contacts</a>\n  <a (click)=\"routeToHospitals()\">Hospitals</a>\n  <a (click)=\"routeToNotifications()\">Notifications</a>\n  <a (click)=\"routeToColleges()\">Colleges</a>\n  <div class=\"login-container\">\n    <button type=\"submit\">Logout</button>\n  </div>\n</div>\n<div>\n  <img src=\"assets\\image\\hospitals.jpg\" width=\"100%\" height=\"100%\">\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { NgbCarouselConfig } from '@ng-bootstrap/ng-bootstrap';  \nimport { NgbSlideEvent, NgbSlideEventSource } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbCarousel } from '@ng-bootstrap/ng-bootstrap';\nimport { ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.css']\n})\nexport class HomepageComponent implements OnInit {\n  @ViewChild('ngcarousel', { static: true }) ngCarousel: NgbCarousel;\n  images:any;\n  \n  \n\n  constructor(config: NgbCarouselConfig, private router: Router) {  \n    config.interval = 2000;  \n    config.wrap = true;  \n    config.keyboard = false;  \n    config.pauseOnHover = true;  \n  } \n\n  slideActivate(ngbSlideEvent: NgbSlideEvent) {\n    console.log(ngbSlideEvent.source);\n    console.log(ngbSlideEvent.paused);\n    console.log(NgbSlideEventSource.INDICATOR);\n    console.log(NgbSlideEventSource.ARROW_LEFT);\n    console.log(NgbSlideEventSource.ARROW_RIGHT);\n  }\n\n  ngOnInit(): void {\n    this.images= [{imagePath:\"assets/image/103.jpg\"}, {imagePath:\"assets/image/104.jpg\"}, {imagePath:\"assets/image/105.jpg\"}, {imagePath:\"assets/image/106.jpg\"}, {imagePath:\"assets/image/107.jpg\"}]\n  }\n\n  callRegister() {\n    this.router.navigate(['register']);\n  }\n\n  callLogin() {\n    this.router.navigate(['login']);\n  }\n  // Move to specific slide\n  navigateToSlide(item) {\n    this.ngCarousel.select(item);\n    console.log(item)\n  }\n\n  // Move to previous slide\n  getToPrev() {\n    this.ngCarousel.prev();\n  }\n\n  // Move to next slide\n  goToNext() {\n    this.ngCarousel.next();\n  }\n\n  // Pause slide\n  stopCarousel() {\n    this.ngCarousel.pause();\n  }\n\n  // Restart carousel\n  restartCarousel() {\n    this.ngCarousel.cycle();\n  }\n}\n","<div style=\"background-color:brown\">\n    <div class=\"nav\" align=\"left\">\n        <img class=\"nav\" src=\"assets\\image\\101.png\" height=\"5%\" width=\"5%\" id=\"101\">\n\n        <div class=\"login-container\" align=\"right\">\n            <a href=\"#\"><img src=\"assets\\image\\102.png\" id=\"102\" alt=\"bottle\" class=\"thumbnails\" height=\"20%\"\n                    width=\"20%\" /></a>\n\n        </div>\n    </div>\n\n    <div class=\"topnav\">\n        <a class=\"active\" href=\"#home\">Home</a>\n        <a href=\"#about\">About</a>\n        <a href=\"#contact\">Contact</a>\n        <div class=\"login-container\">\n            <button (click)=\"callRegister()\" type=\"submit\">Register</button>\n            <button (click)=\"callLogin()\" type=\"submit\">Login</button>\n        </div>\n    </div>\n    <div class=\"mySlides\">\n        <img src=\"https://www.nuhs.edu.sg/About-NUHS/Newsroom/news-stories/PublishingImages/How%20do%20you%20keep%20yourself%20safe%20from%20COVID%2019%20-%20English%20(Image%20on%20Page).jpg\"\n            width=\"33%\" height=\"30%\">\n        <img src=\"https://pbs.twimg.com/media/ETjd_xgU8AAqgvf.jpg\" width=\"33%\" height=\"34%\">\n        <img src=\"https://images-na.ssl-images-amazon.com/images/I/815LdVMLHpL._AC_SY741_.jpg\" width=\"33%\" height=\"30%\">\n\n        <img src=\"https://www.galfandberger.com/files/2020/03/virus-prevention-1-1280x720.jpg\" width=\"33%\" height=\"40%\">\n        <img src=\"https://www.sirfnews.com/wp-content/uploads/2020/03/CORONAVIRUS-prevention.jpg\" width=\"33%\"\n            height=\"40%\">\n        <img src=\"https://www.redcross.org/content/dam/redcross/about-us/news/2020/coronavirus-safety-tw.jpg\"\n            width=\"33%\" height=\"35%\">\n\n        <img src=\"https://s3.amazonaws.com/cache.salvationarmy.org/1015029e-e9a5-4d44-884f-b38cf36dd78f_Covid-19-Health-Advice-preview.jpg\"\n            width=\"33%\" height=\"35%\">\n        <img src=\"https://www.ics-shipping.org/images/default-source/Free-Resources-/covid19-be-informed.png?sfvrsn=0\"\n            width=\"33%\" height=\"35%\">\n        <img src=\"https://www.ics-shipping.org/images/default-source/Free-Resources-/covid-19-shipboard-care-for-people-with-suspected-or-confirmed-covid-19.png?sfvrsn=0\"\n            width=\"33%\" height=\"35%\">\n    </div>\n\n\n    <!-- <div class=\"mySlides\" align=\"center\">\n        <img src=\"assets\\image\\103.jpg\" id=\"103\" width=\"60%\" height=\"40%\">\n    </div>\n    <div class=\"mySlides\" align=\"center\">\n        <img src=\"assets\\image\\104.png\" id=\"104\" width=\"60%\" height=\"40%\"></div>\n\n    <div class=\"mySlides\" align=\"center\">\n        <img src=\"assets\\image\\105.jpg\" id=\"105\" width=\"60%\" height=\"40%\"></div>\n    <div class=\"mySlides\" align=\"center\">\n        <img src=\"assets\\image\\106.jpg\" id=\"106\" width=\"60%\" height=\"40%\"></div>\n\n    <div class=\"mySlides\" align=\"center\">\n        <img src=\"assets\\image\\107.jpg\" id=\"107\" width=\"60%\" height=\"40%\"></div>-->\n\n    <!--<div class=\"row\">\n        <div class=\"column\">\n            <img class=\"img\" src=\"assets\\image\\103.jpg\" id=\"103\" width=\"33%\" height=\"40%\">\n        </div>\n        <div class=\"column\">\n            <img class=\"img\" src=\"assets\\image\\104.png\" id=\"104\" width=\"33%\" height=\"40%\">\n        </div>\n        <div class=\"column\">\n            <img class=\"img\" src=\"assets\\image\\105.jpg\" id=\"105\" width=\"33%\" height=\"40%\">\n        </div>\n    </div>-->\n\n\n\n\n    <div class=\"footer\">\n\n        <a href=\"https://www.pmindia.gov.in/en/?query\"><img src=\"assets\\image\\108.jpg\" id=\"108\" alt=\"bottle\"\n                class=\"thumbnails\" height=\"9%\" width=\"8%\" /></a>\n\n        <a href=\"http://meity.gov.in/\"><img src=\"assets\\image\\109.jfif\" id=\"109\" alt=\"bottle\" class=\"thumbnails\"\n                height=\"8%\" width=\"8%\" /></a>\n\n        <a href=\"https://www.india.gov.in/\"><img src=\"assets\\image\\110.png\" id=\"110\" alt=\"bottle\" class=\"thumbnails\"\n                height=\"8.5%\" width=\"8.5%\" /></a>\n\n        <a href=\"https://self4society.mygov.in/\"><img src=\"assets\\image\\111.jfif\" id=\"111\" alt=\"bottle\"\n                class=\"thumbnails\" height=\"8%\" width=\"5.5%\" /></a>\n\n        <a href=\"https://transformingindia.mygov.in/\"><img src=\"assets\\image\\112.jfif\" id=\"112\" alt=\"bottle\"\n                class=\"thumbnails\" height=\"5.5%\" width=\"5.5%\" /></a>\n\n        <a href=\"https://swachhbharat.mygov.in/\"><img src=\"assets\\image\\113.jfif\" id=\"113\" alt=\"bottle\"\n                class=\"thumbnails\" height=\"8%\" width=\"8%\" /></a>\n\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { CovidserviceService } from '../covidservice.service';\n\n@Component({\n  selector: 'app-hospitals',\n  templateUrl: './hospitals.component.html',\n  styleUrls: ['./hospitals.component.css']\n})\nexport class HospitalsComponent implements OnInit {\n  hospitals: any;\n  constructor(private service: CovidserviceService) { }\n\n  ngOnInit(): void {\n    this.service.getHospitals().subscribe((result: any)=>{this.hospitals = result.data.regional})\n  }\n\n}\n","<style>\n    body {\n        background-color:rgb(220, 236, 238) ;\n        \n    }\n</style>\n<html>\n\n<body>\n    <div class=\"container\">\n        <table class=\"table table-hover\" align=center>\n\n            <thead>\n                <th scope>State</th>\n                <th scope>Rural Hospitals</th>\n                <th scope>Rural Beds</th>\n                <th scope>Urban Hospitals</th>\n                <th scope>Urban Beds</th>\n                <th scope>Total Hospitals</th>\n                <th scope>Total Beds</th>\n            </thead>\n            <tbody>\n                <tr *ngFor='let hospital of hospitals'>\n\n                    <td>{{hospital.state}}</td>\n                    <td>{{hospital.ruralHospitals}}</td>\n                    <td>{{hospital.ruralBeds}}</td>\n                    <td>{{hospital.urbanHospitals}}</td>\n                    <td>{{hospital.urbanBeds}}</td>\n                    <td>{{hospital.totalHospitals}}</td>\n                    <td>{{hospital.totalBeds}}</td>\n\n                </tr>\n            </tbody>\n        </table>\n\n\n    </div>\n\n</body>\n\n</html>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CovidserviceService } from '../covidservice.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  customer: any;\n  loginIds: any;\n  constructor(private router: Router, private service: CovidserviceService) { }\n\n  ngOnInit(): void {\n  }\n\n  loginSubmit(loginForm: any) {\n    this.service.customerLogin(loginForm.loginId, loginForm.password).subscribe((result: any) => {\n      console.log(result), this.customer=result;\n      if (this.customer) {\n        this.router.navigate(['customer-page']);\n      } else {\n        alert(\"Invalid Credentials\");\n      }\n\n\n\n    });\n\n\n\n\n  }\n\n}\n","<style>\n    * {\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n      }\n\n    body {\n        background-image: url(\"assets/image/corona1.jpg\");\n        background-size: cover;\n    }\n    \n    .login-wrapper {\n        height: 100vh;\n        width: 100wh;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n\n    .form{\n        position: absolute;\n        width: 100%;\n        bottom:-20%;\n        max-width: 380px;\n        padding: 60px 65px 60px;\n        background-color: rgba(0, 0, 0, 0.842);\n        border-radius: 10px;\n        color: #fff;\n        box-sizing:border-box;\n       transform: translate(-50%,-50%);\n    }\n   \n\n    .form img {\n        position: absolute;\n        top: -50px;\n        left: calc(50% - 50px);\n        width: 100px;\n        background: rgba(255, 255, 255, 0.8);\n        border-radius: 50%;\n    }\n\n    .form h2{\n        text-align: center;\n        letter-spacing: 1px;\n        margin-bottom: 2rem;\n        color: #ff652f;\n\n    }\n    .form .input-group{\n        position: relative;\n    }\n    .form .input-group input{\n        width: 100%;\n        padding: 15px 0;\n        font-size:  1.5rem;\n        letter-spacing: 1px;\n        margin-bottom: 10px;\n        border: none;\n        border-bottom: 1px solid #fff;\n        outline: none;\n        background-color: transparent;\n        color: inherit;\n    }\n\n    .form .input-group label{\n        position: absolute;\n        \n        padding: 10px 0;\n        font-size: 0.5rem;\n        pointer-events: none;\n        transition: .3s ease-out;\n    }\n    .form .input-group input:focus +label,\n    .form .input-group input:valid +label{\n        transform: translateY(-18px);\n        color: #ff652f;\n        font-size: .8rem;\n    }\n\n    .submit-btn{\n        display: block;\n        margin-left: auto;\n        border: none;\n        outline: none;\n        background: #ff652f;\n        font-size: 1rem;\n        text-transform: uppercase;\n        letter-spacing: 1px;\n        padding: 10px 20px;\n        border-radius: 5px;\n        cursor:pointer;\n\n    }\n   \n</style>\n\n\n<html>\n<body>\n    <div class=\"login-wrapper\">\n        <form #loginForm=\"ngForm\" class=\"form-group\" (ngSubmit)=\"loginSubmit(loginForm.value)\" novalidate>\n            <div class=\"form\">\n                        <h2>Login</h2>\n                        Login\n                        <div class=\"input-group\">\n                            <input type=\"text\" class=\"form-control\" name=\"loginId\" ngModel #loginId=\"ngModel\"\n                                placeholder=\"login id\">\n                            <label for=\"loginId\"></label>\n                        </div>\n                        \n                        Password\n                        <div class=\"input-group\">\n                            <input type=\"password\" class=\"form-control\" name=\"password\" ngModel #password=\"ngModel\"\n                                placeholder=\"password\">\n                            <label for=\"password\"></label>\n                        </div>\n                        \n                        <input type=\"submit\" value=\"Login\" class=\"submit-btn\"><br/>\n                        <a routerLink=\"/register\" >SignUp</a>\n                        \n                    </div>\n                </form>\n              \n             \n              </div>\n       \n \n</body>\n\n</html>\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { CovidserviceService } from '../covidservice.service';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.css']\n})\nexport class NotificationsComponent implements OnInit {\n  notifications: any;\n  constructor(private service: CovidserviceService) { }\n\n  ngOnInit(): void {\n    this.service.getNotifications().subscribe((result: any) =>{this.notifications = result.data.notifications});\n  }\n\n}\n","<style>\n    body {\n        background-color:rgb(220, 236, 238) ;\n        \n    }\n</style>\n<html>\n\n<body>\n\n\n   \n    <div class=\"container\">\n        <table class=\"table table-hover\" align=center>\n\n            <thead>\n                <th>Date</th>\n                <th scope>Notification Title</th>\n                <th scope>Link</th>\n            </thead>\n            <tbody>\n                <tr *ngFor='let notification of notifications'>\n                        <td>{{notification.title | slice: 0:10}}</td>\n                        <td>{{notification.title | slice: 11}}</td>\n                        <td><a href=\"{{notification.link}}\">{{notification.link}}</a></td>\n                    \n                </tr>\n            </tbody>\n        </table>\n\n\n    </div>\n\n</body>\n\n</html>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CovidserviceService } from '../covidservice.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  customer:any;\n  loginIds: any;\n  confirmPassword: any;\n  constructor(private service: CovidserviceService, private router: Router) {\n    this.customer = {custName: '', mblNo:'', email: '', gender: '',age:'', loginId: '', password: ''}\n   }\n\n  ngOnInit(): void {\n    this.service.getAllLoginIds().subscribe((result: any) => { console.log(result); this.loginIds = result });\n  }\n\n  register(registerForm: any): void {\n   this.service.regCustomer(this.customer).subscribe((result: any) => { console.log(result); });  \n   this.router.navigate(['login']);  \n  }\n\n}\n","<style>\n    * {\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n\n    }\n\n    body {\n        background-image: url(\"assets/image/register.jfif\");\n        background-size: cover;\n    }\n\n    .register-wrapper {\n        height: 100vh;\n        width: 100wh;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n\n    .form {\n        position: absolute;\n        width: 100%;\n        max-width: 380px;\n        padding: 25px 90px 3px;\n        background:rgba(0, 0, 0, 0.842);\n        border-radius: 10px;\n        color: #fff;\n        box-sizing: border-box;\n        transform: translate(-50%, -50%);\n    }\n\n\n\n\n    .form h2 {\n        text-align: center;\n        letter-spacing: 1px;\n        margin-bottom: 2rem;\n        color: #ff8801;\n\n    }\n\n    .form .input-group {\n        position: relative;\n    }\n\n    .form .input-group input {\n        width: 100%;\n        padding: 2px 0;\n        font-size: 1.5rem;\n        letter-spacing: 1px;\n        margin-bottom: 10px;\n        border: none;\n        border-bottom: 1px solid #fff;\n        outline: none;\n        background-color: transparent;\n        color: inherit;\n    }\n\n    .form .input-group label {\n        position: absolute;\n        top: 0;\n        left: 0;\n        padding: 10px 0;\n        font-size: 0.5rem;\n        pointer-events: none;\n        transition: .3s ease-out;\n    }\n\n    .form .input-group input:focus+label,\n    .form .input-group input:valid+label {\n        transform: translateY(-18px);\n        color: #ff652f;\n        font-size: .8rem;\n    }\n\n    .submit-btn {\n        display: block;\n        margin-left: auto;\n        border: none;\n        outline: none;\n        background: #ff652f;\n        font-size: 1rem;\n        text-transform: uppercase;\n        letter-spacing: 1px;\n        padding: 10px 20px;\n        border-radius: 5px;\n        cursor: pointer;\n\n    }\n</style>\n\n\n<html>\n\n\n\n\n<html>\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <link rel=\"stylesheet\">\n    <title>Register</title>\n\n\n</head>\n\n<body>\n    <div class=\"register-wrapper\">\n        <form #registerForm=\"ngForm\" class=\"form-group\"\n            (ngSubmit)=\"registerForm.form.valid && register(registerForm.value)\" novalidate>\n            <div class=\"form\">\n                <h2>Register</h2>\n                Enter Name:\n                <div class=\"input-group\">\n                    <input type=\"text\" name=\"custName\" [(ngModel)]='customer.custName' required><br />\n                    <label for=\"custName\"></label>\n                </div>\n                Enter Mobile:\n                <div class=\"input-group\">\n                    <input type=\"tel\" name=\"mblNo\" [(ngModel)]='customer.mblNo' #cpass2=\"ngModel\" pattern=\"[0-9]{10}\"required><br />\n                    <label for=\"mblNo\"></label>\n                    <div class=\"text-danger\">\n                        <div *ngIf=\"registerForm.touched && cpass2.errors?.pattern\">Enter the valid number</div>\n                    </div>\n                </div>\n\n                Enter Mail Id:\n                \n                <div class=\"input-group\">\n                    <input type=\"email\" class=\"form-control\" name=\"email\" [(ngModel)]='customer.email' #cpass1=\"ngModel\"  pattern=\"[^ @]*@[^ @]*\" required /> \n                    <label for=\"email\"></label>\n                </div>\n                <div class=\"text-danger\">\n                    <div *ngIf=\"registerForm.touched && cpass1.errors?.pattern\">Enter the valid mailId</div>\n                </div>\n                Enter gender:\n                <div class=\"input-group\">\n                    <select name=\"gender\" [(ngModel)]='customer.gender'>\n                        <option> Male</option>\n                        <option>Female</option>\n                    </select>\n                    <input type=\"text\" name=\"gender\" [(ngModel)]='customer.gender' required>\n                    <label for=\"gender\"></label>\n                </div>\n\n\n                Enter age:\n                <div class=\"input-group\">\n                    <input type=\"number\" name=\"age\" [(ngModel)]='customer.age'required><br />\n                    <label for=\"mblNo\"></label>\n                </div>\n\n\n               \n                \n                Enter Login Id:\n                <div class=\"input-group\">\n                    <input type=\"text\" class=\"form-control\" name=\"loginId\" [(ngModel)]='customer.loginId'\n                        placeholder=\"login id\" required>\n                    <label for=\"loginId\"></label>\n                </div>\n                Enter Password:\n                <div class=\"input-group\">\n                    <input type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]='customer.password'\n                        placeholder=\"password\" required>\n                    <label for=\"password\"></label>\n                </div>\n\n                Enter Confirm Password:\n                <div class=\"input-group\">\n                    <input type=\"password\" class=\"form-control\" name=\"confirmPassword\" [(ngModel)]='confirmPassword'\n                        placeholder=\" Confirm Password\" pattern=\"{{customer.password}}\" #cpass=\"ngModel\" required>\n                    <label for=\"Confirm Password\"></label>\n\n\n                </div>\n                <div class=\"text-danger\">\n                    <div *ngIf=\"registerForm.touched && cpass.errors?.pattern\">Password and Confirm password doesn't\n                        match</div>\n                </div>\n\n\n\n                <input type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!registerForm.valid\" class=\"submit-btn\"\n                    value=\"Register\">\n\n            </div>\n        </form>\n\n    </div>\n</body>\n\n</html>\n\n\n\n\n\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {College} from './college';\n\n@Pipe({\n  name: 'searchfilter'\n})\nexport class SearchfilterPipe implements PipeTransform {\n\n  transform(Colleges: College[], searchValue: string): College[] {\n    if(!Colleges || !searchValue) {\n      return Colleges;\n    }\n    return Colleges.filter(college => college.state.toLocaleLowerCase().includes(searchValue.toLocaleLowerCase())/*||\n                                      college.ownership.toLocaleLowerCase().includes(searchValue.toLocaleLowerCase())*/);\n      \n\n  }\n}\n\n /* transform(items:any[], searchText:string, fieldName:string): any[] {\n    if(!items) {\n      return [];\n    }\n    if(!searchText) {\n      return items;\n    }\n    searchText=searchText.toLowerCase();\n    return items.filter(item=>{\n      if(item && item[fieldName]) {\n        return item[fieldName].toLowerCase().includes(searchText);\n      }\n      return false;\n    });*/\n    \n\n  \n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}